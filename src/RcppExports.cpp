// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcpp_wrap_test
SEXP rcpp_wrap_test();
RcppExport SEXP _mapboxGeometry_rcpp_wrap_test() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_wrap_test());
    return rcpp_result_gen;
END_RCPP
}
// rcpp_as_test
SEXP rcpp_as_test();
RcppExport SEXP _mapboxGeometry_rcpp_as_test() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_as_test());
    return rcpp_result_gen;
END_RCPP
}
// rcpp_test_performance
SEXP rcpp_test_performance(Rcpp::NumericMatrix x);
RcppExport SEXP _mapboxGeometry_rcpp_test_performance(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_test_performance(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mapboxGeometry_rcpp_wrap_test", (DL_FUNC) &_mapboxGeometry_rcpp_wrap_test, 0},
    {"_mapboxGeometry_rcpp_as_test", (DL_FUNC) &_mapboxGeometry_rcpp_as_test, 0},
    {"_mapboxGeometry_rcpp_test_performance", (DL_FUNC) &_mapboxGeometry_rcpp_test_performance, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_mapboxGeometry(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
